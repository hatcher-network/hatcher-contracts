{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x28a9373e5Da8eB515b83f0ef559Ec39AE11d854B",
    "txHash": "0x3c4b55f7f62a6d2d687b87eabf2302c6d7fa633542fa1867d3b2bca240a09096"
  },
  "proxies": [
    {
      "address": "0x09c25233C798f09E320A0cD6a7b06423691c6E32",
      "txHash": "0x3bc076ff8011994e016b657dd61d7fdf9ebb34d434ecb65a8437ccb44875b7fe",
      "kind": "transparent"
    },
    {
      "address": "0xcD8C50d498A706076242557EbD4EcdCC6a525118",
      "txHash": "0x10414be6f4c2f7171056620429bc9041c273d1aacc8cd5319189fe207d46730e",
      "kind": "transparent"
    },
    {
      "address": "0xf93DcA58D4a12b16A4686fdf93d0C1a505D8A060",
      "txHash": "0x5837f0ab607f023501504dd3a249e584d6046d6c06e1641485329cfc6dbb48a2",
      "kind": "transparent"
    },
    {
      "address": "0x98eDef0E9f1bd58F77519f3373A2aD96b1d02780",
      "txHash": "0x51b718a1c69ee1fb4ef8ee3df1c5ddf4046419b91b857031dc07170dbc0d81c7",
      "kind": "transparent"
    },
    {
      "address": "0x0492a8045bA52C4572e4E0DfC4D7E03e266A026c",
      "txHash": "0x7916dcdb0693d921be9d459c01dc335f1bfb20e42bfde17a9b6ba010a78ffb16",
      "kind": "transparent"
    }
  ],
  "impls": {
    "2e12291a42101f5096fb46f15c24c63c705108429740beb0b26fa54f214714b4": {
      "address": "0x58Bb3b278A9db4f34Ce10e23559661Ca6B18c3b3",
      "txHash": "0xc9c6aae2a70aa1efd17a21dec2dd7080623332a07de60480a9113ed52d4074c4",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_mintPrice",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:19"
          },
          {
            "label": "_devTax",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:20"
          },
          {
            "label": "_hatcherServicePassport",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(HatcherServicePassport)4328",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:38"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:39"
          },
          {
            "label": "services",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_struct(Service)3336_storage)",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:41"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:42"
          },
          {
            "label": "userServices",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:43"
          },
          {
            "label": "_Gap",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)25_storage",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)25_storage": {
            "label": "uint256[25]",
            "numberOfBytes": "800"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(HatcherServicePassport)4328": {
            "label": "contract HatcherServicePassport",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Service)3336_storage)": {
            "label": "mapping(uint256 => struct HatcherServiceCertificate.Service)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Service)3336_storage": {
            "label": "struct HatcherServiceCertificate.Service",
            "members": [
              {
                "label": "serviceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "userCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxUserLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "logo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "endpoint",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "service_type",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "revenue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "status",
                "type": "t_uint8",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b9ffef8424add148d4471d89ee53bcf3e77a56f72c101a8aed138dba74cf0872": {
      "address": "0x0bB6ad6874d4ff80e082eAdBe09ADAAe78184a48",
      "txHash": "0x9c03f56c94d4939d71a9f98b8949a605be5215e9b6953723ffc040aca6a2e2e3",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_certificateContract",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(HatcherServiceCertificate)3887",
            "contract": "HatcherServicePassport",
            "src": "contracts/service/HatcherServicePassport.sol:25"
          },
          {
            "label": "passports",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_struct(Passport)3911_storage)",
            "contract": "HatcherServicePassport",
            "src": "contracts/service/HatcherServicePassport.sol:26"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "HatcherServicePassport",
            "src": "contracts/service/HatcherServicePassport.sol:27"
          },
          {
            "label": "userPassports",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "HatcherServicePassport",
            "src": "contracts/service/HatcherServicePassport.sol:30"
          },
          {
            "label": "servicePassports",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "HatcherServicePassport",
            "src": "contracts/service/HatcherServicePassport.sol:31"
          },
          {
            "label": "_Gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)25_storage",
            "contract": "HatcherServicePassport",
            "src": "contracts/service/HatcherServicePassport.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)25_storage": {
            "label": "uint256[25]",
            "numberOfBytes": "800"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(HatcherServiceCertificate)3887": {
            "label": "contract HatcherServiceCertificate",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Passport)3911_storage)": {
            "label": "mapping(uint256 => struct HatcherServicePassport.Passport)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Passport)3911_storage": {
            "label": "struct HatcherServicePassport.Passport",
            "members": [
              {
                "label": "passportId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "serviceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "expireTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "833825ff380f66895b4ddbe4734b605dd64392d2ad3b0e4a7db8144a1ce37bc8": {
      "address": "0x4940f3Cc601786B82B54451EF8F5Ef3F25C6E543",
      "txHash": "0x9e054f4d97bde7b1c0ea7a1bd88b203cfbe60991acd9bdbeaca6b7bc70721cff",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_mintPrice",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:19"
          },
          {
            "label": "_devTax",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:20"
          },
          {
            "label": "_hatcherServicePassport",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(HatcherServicePassport)7635",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:38"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:39"
          },
          {
            "label": "services",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_struct(Service)6393_storage)",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:41"
          },
          {
            "label": "balances",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:42"
          },
          {
            "label": "userServices",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:43"
          },
          {
            "label": "_Gap",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)25_storage",
            "contract": "HatcherServiceCertificate",
            "src": "contracts/service/HatcherServiceCertificate.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)25_storage": {
            "label": "uint256[25]",
            "numberOfBytes": "800"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(HatcherServicePassport)7635": {
            "label": "contract HatcherServicePassport",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Service)6393_storage)": {
            "label": "mapping(uint256 => struct HatcherServiceCertificate.Service)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Service)6393_storage": {
            "label": "struct HatcherServiceCertificate.Service",
            "members": [
              {
                "label": "serviceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "userCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxUserLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "logo",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "endpoint",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "service_type",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "revenue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "status",
                "type": "t_uint8",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2cde9736fc3cf78019712374259a02f70da975e0c63fc1c80f600691fb61da17": {
      "address": "0x93A66446F03e43E0B64faaaBF93Be2D617fCBA14",
      "txHash": "0xaa7da2c430d846be445bc3162e13d4e5a295474e7b6be79cd036d3dc9615c58a",
      "layout": {
        "solcVersion": "0.8.12",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_certificateContract",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(HatcherServiceCertificate)7069",
            "contract": "HatcherServicePassport",
            "src": "contracts/service/HatcherServicePassport.sol:25"
          },
          {
            "label": "passports",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_struct(Passport)7093_storage)",
            "contract": "HatcherServicePassport",
            "src": "contracts/service/HatcherServicePassport.sol:26"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "HatcherServicePassport",
            "src": "contracts/service/HatcherServicePassport.sol:27"
          },
          {
            "label": "userPassports",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "HatcherServicePassport",
            "src": "contracts/service/HatcherServicePassport.sol:30"
          },
          {
            "label": "servicePassports",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "HatcherServicePassport",
            "src": "contracts/service/HatcherServicePassport.sol:31"
          },
          {
            "label": "_Gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)25_storage",
            "contract": "HatcherServicePassport",
            "src": "contracts/service/HatcherServicePassport.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)25_storage": {
            "label": "uint256[25]",
            "numberOfBytes": "800"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(HatcherServiceCertificate)7069": {
            "label": "contract HatcherServiceCertificate",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Passport)7093_storage)": {
            "label": "mapping(uint256 => struct HatcherServicePassport.Passport)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Passport)7093_storage": {
            "label": "struct HatcherServicePassport.Passport",
            "members": [
              {
                "label": "passportId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "serviceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "createTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "expireTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
